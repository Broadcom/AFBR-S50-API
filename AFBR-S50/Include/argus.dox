/***************************************************************************** 
 * Copyright (c) 2021, Broadcom Inc
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from
 *    this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *****************************************************************************/


/*!***************************************************************************
@defgroup	argus AFBR-S50 SDK

@brief		AFBR-S50 API and Core Libraries

@details	
 *****************************************************************************/

/*!***************************************************************************
@defgroup	argus_util Utility
@ingroup	argus

@brief		Utility library containing useful functions.

@details	Contains all utility code, e.g. fixed-point math, that belongs to
			the AFBR-S50 core library algorithms.
			
			The methods and definitions will be helpful for user when implementing
			their own usage of the AFBR-S50 API.
 *****************************************************************************/
 
 
/*!***************************************************************************
@defgroup	argus_misc Miscellaneous Math
@ingroup	argus_util

@brief		Miscellaneous math utility functions utilized within the API.

@details	Modules overview: 
			 - Integer Math: Mathematical functionality on integer values.
			 - Long integer multiplication (32bit x 32bit): double word integer
			   multiplication algorithms.
			 . 
 *****************************************************************************/
 

/*!***************************************************************************
@defgroup	argus_hal Hardware Abstraction Layers
@ingroup	argus

@brief		Collection of all interfaces for the Hardware Abstraction Layers (HAL).

@details	Contains all hardware and platform dependent code required by the
            AFBR-S50 API and core library.
 *****************************************************************************/

/*!***************************************************************************
@defgroup 	argus_cfg Configuration
@ingroup	argus_api

@brief		Device configuration parameter definitions and API functions.

@details	This module takes care of keeping the device configuration up
			to date. Therefore, the configuration is managed in a local data
			structure. Requested changes to the device configuration are
			validated and endorsed within the module. 
			
 *****************************************************************************/

/*!***************************************************************************
@defgroup 	argus_cal Calibration
@ingroup	argus_api

@brief		Device calibration parameter definitions and API functions.

@details	The calibration concept of the Time-of-Flight measurement device
			is made up of three parts:
			 - Factory calibration data which is provided in the devices
			   EEPROM. This data is read and applied upon device initialization.
			 - Online calibration is executed along with the actual distance
			   measurements. Therefore, ambient information, e.g. temperature
			   or voltage levels, are gathered during measurements. The
			   information is then utilized to adjust the device configuration
			   and evaluation algorithms accordingly.
			 - User calibration parameters are applied on top of this. These
			   parameters are provided in order to adopt the device to the
			   user application, e.g. cover glass calibration. These parameters
			   must be set (if required) by the given API.
			 .
*****************************************************************************/
 