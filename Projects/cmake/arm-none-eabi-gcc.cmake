set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR ARM)

# set(ARM_TOOLCHAIN_DIR "C:/ST/STM31CubeCLT/GNU-tools-for-STM32/bin/")
# set(ARM_TOOLCHAIN_DIR "/C/ST/STM32CubeCLT/GNU-tools-for-STM32/bin/")
# set(BINUTILS_PATH ${ARM_TOOLCHAIN_DIR})
# set(BINUTILS_PATH "")

set(TOOLCHAIN_PREFIX arm-none-eabi-)

set(CMAKE_C_FLAGS "-fdata-sections -ffunction-sections -Wl,--gc-sections -Wl,--print-memory-usage -Wl,--cref -Wl,--sort-section=alignment")
set(CMAKE_CXX_FLAGS "${CMAKE_C_FLAGS} -fno-rtti -fno-exceptions -fno-threadsafe-statics")

# set(CMAKE_C_FLAGS_DEBUG "-DDEBUG")
# set(CMAKE_C_FLAGS_RELEASE "-DNDEBUG -DRELEASE")
# set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG}")
# set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE}")

set(CMAKE_C_COMPILER "${ARM_TOOLCHAIN_DIR}${TOOLCHAIN_PREFIX}gcc")
set(CMAKE_ASM_COMPILER ${CMAKE_C_COMPILER})
set(CMAKE_CXX_COMPILER "${ARM_TOOLCHAIN_DIR}${TOOLCHAIN_PREFIX}g++")

set(CMAKE_OBJCOPY "${ARM_TOOLCHAIN_DIR}${TOOLCHAIN_PREFIX}objcopy" CACHE INTERNAL "objcopy tool")
set(CMAKE_SIZE_UTIL "${ARM_TOOLCHAIN_DIR}${TOOLCHAIN_PREFIX}size" CACHE INTERNAL "size tool")

# set(CMAKE_FIND_ROOT_PATH ${BINUTILS_PATH})
# set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
# set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
# set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

set(CMAKE_EXECUTABLE_SUFFIX_ASM ".elf")
set(CMAKE_EXECUTABLE_SUFFIX_C ".elf")
set(CMAKE_EXECUTABLE_SUFFIX_CXX ".elf")

set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)
